{"version":3,"file":"static/js/872.b4ff93ef.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() =>{ \n        updateChar();\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then (onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import { useState, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    const [selectedCharId, setSelectedCharId] = useState(null);\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(()=> {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded);\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(setNewItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const onSelectChar = (id) => {\n        setSelectedCharId(id);\n        props.onCharSelected(id);\n        props.charInfoFocus();\n    }\n\n    function renderItems(arr, id) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <CSSTransition key={item.id} timeout={500} classNames=\"alert\">\n                    <li \n                        className={item.id === id ? \"char__item char__item_selected\" : \"char__item\"}\n                        onClick={() => onSelectChar(item.id)}\n                        onKeyDown={(event) => event.code === \"Enter\" || event.code === \"Space\" ? onSelectChar(item.id) : ''}\n                        tabIndex=\"0\">\n                            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                            <div className=\"char__name\">{item.name}</div>\n                    </li>\n                </CSSTransition>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    \n    const items = renderItems(charList, selectedCharId);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\" ref={props.charInfoRef} tabIndex='0'>\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n            <img src={thumbnail} alt={name} style={imgStyle}/>\n            <div>\n                <div className=\"char__info-name\">{name}</div>\n                <div className=\"char__btns\">\n                    <a href={homepage} target=\"_blank\" rel='noreferrer' className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} target=\"_blank\" rel='noreferrer' className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div className=\"char__descr\">\n            {description}\n        </div>\n        <div className=\"char__comics\">Comics:</div>\n        <ul className=\"char__comics-list\">\n            {comics.length > 0 ? null : 'There is no comics with this character'}\n            {\n                // eslint-disable-next-line\n                comics.map((item, i) => {\n                    if (i <= 9) {\n                        let comicId = item.resourceURI.slice(item.resourceURI.lastIndexOf('/') + 1);\n                        return (\n                            <Link to={`/comics/${comicId}`} className=\"char__comics-item\" key={i}>\n                                <li>\n                                    {item.name}\n                                </li>\n                            </Link>\n                        )\n                    }\n                })\n            }\n\n        </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return <h2>Something went wrong</h2>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import { useState, useRef } from \"react\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null)\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    const charInfoRef = useRef(null);\n\n    function charInfoFocus() {\n        charInfoRef.current && charInfoRef.current.focus()\n    }\n\n    return (\n        <>\n            <ErrorBoundary>\n                <RandomChar/>\n            </ErrorBoundary>\n\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected} \n                                charId={selectedChar}\n                                charInfoFocus={charInfoFocus}\n                                />\n                </ErrorBoundary>\n\n                <ErrorBoundary>\n                    <CharInfo charId={selectedChar} charInfoRef={charInfoRef}/>\n                </ErrorBoundary>\n            </div>\n        </>\n    )\n}\n\nexport default MainPage;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        setLoading(true);\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            setLoading(false);\n            return data;\n\n        } catch(e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n\n    }, [])\n\n    const clearError = useCallback(() => setError(null), []);\n\n    return {loading, request, error, clearError}\n}","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n\tconst { loading, request, error, clearError } = useHttp();\n\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\n\tconst _apiKey = \"apikey=c5d6fc8b83116d92ed468ce36bac6c62\";\n\tconst _baseOffset = 210;\n\n\tconst getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n\tconst _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n\treturn {\n\t\tloading,\n\t\terror,\n\t\tclearError,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n\t};\n};\n\nexport default useMarvelService;"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","View","_ref","char","name","description","thumbnail","homepage","wiki","imgStyle","_jsxs","className","children","href","RandomChar","setChar","useState","loading","error","getCharacter","clearError","useMarvelService","useEffect","updateChar","onCharLoaded","id","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","replaceClassName","origClass","classToRemove","replace","RegExp","React","forceReflow","node","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","nodeRef","current","ReactDOM","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","childProps","TransitionGroupContext","Provider","value","only","noop","contextType","propTypes","defaultProps","removeClass","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","type","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","hasClass","_addClass","_this$appliedClasses$","base","done","getChildMapping","mapFn","result","Children","map","child","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","cloneElement","values","obj","k","TransitionGroup","handleExited","self","ReferenceError","_assertThisInitialized","contextValue","firstRender","mounted","currentChildMapping","Component","component","childFactory","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","selectedCharId","setSelectedCharId","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","onSelectChar","onCharSelected","charInfoFocus","items","arr","item","onKeyDown","code","tabIndex","renderItems","disabled","Skeleton","_Fragment","comics","rel","comicId","resourceURI","slice","lastIndexOf","Link","to","charId","skeleton","ref","charInfoRef","ErrorBoundary","componentDidCatch","errorInfo","console","log","MainPage","selectedChar","useRef","CharList","focus","CharInfo","request","useHttp","setLoading","setError","useCallback","async","url","method","body","headers","response","fetch","ok","Error","data","json","e","message","_apiBase","_apiKey","_transformCharacter","path","extension","urls","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","results","res","getAllComics","getComic"],"sourceRoot":""}